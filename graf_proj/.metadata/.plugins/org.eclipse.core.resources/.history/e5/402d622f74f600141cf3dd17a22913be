import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;


public class MapFrame extends JFrame implements ActionListener {
	public MapPanel mapPanel;
	private ArrayList<Bot> bots;
	
	public MapFrame()
	{
		//frame
		super("Game");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(600, 400);
		setResizable(false);
		//map
		buildMap();
        mapPanel = new MapPanel();
        bots = new ArrayList<>();
        //example bots generation
        bots.add(new Bot(0, Map.getInstance().getField(8, 5))); //zeroth bot is the default bot of player1, and so its is highlighted by the panel
	    for(int i = 1; i < 4; i++)
	    {
	    	Bot bot = new Bot(i, Map.getInstance().getField(i, i*2));
	    	bots.add(bot);
	    }
	    
	    mapPanel.setBots(bots);
        setLayout(new BorderLayout());
        add(mapPanel, BorderLayout.NORTH);
        //buttonPanel
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.LEADING, 25, 10));
        JButton jumpButton = new JButton("Jump");
        jumpButton.setActionCommand("Jump");
        jumpButton.addActionListener(this);
        buttonPanel.add(jumpButton);
        JButton putPuttyButton = new JButton("Put putty");
        buttonPanel.add(putPuttyButton);
        
        add(buttonPanel, BorderLayout.CENTER);
        pack();
        setVisible(true);		
	}
	
	/** Button actions handling */
	public void actionPerformed(ActionEvent e) {
		if(e.getActionCommand().equals("Jump"))
		{
			
		}
	}
	
	private void buildMap()
	{
		for(int row = 0; row < MapPanel.rowCount; row++)
		{
			for(int column = 0; column < MapPanel.columnCount; column++)
			{
				Map.getInstance().addField(new Field(column, row));
			}
		}
	}
	
}
